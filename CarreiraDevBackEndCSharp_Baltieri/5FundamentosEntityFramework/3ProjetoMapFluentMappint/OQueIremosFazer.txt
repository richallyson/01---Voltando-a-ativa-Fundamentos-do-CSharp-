Depois te trabalhar com o mapeamento através de anotações, agora iremos trabalhar com o Fluent Mapping. Lembrando que caso seu projeto seja pequeno, vale mais a pena usar mesmo notações, porém, quando seu projeto começa a ter um escopo maior, o recomendado é usar o fluent mapping por causa da sua flexibilidade. Ele permite que tenhamos uma divisão de responsabilidade muito maior, como por exemplo, que a gente consiga separar muito bem, o que é do entity framework, com o que é core (o que é compartilhado entre as nossas aplicações). Quando a gente começa a desenvolver aplicações que são para multiplos dispositivos, existe uma necessidade de separar a aplicação do entity framework, e isso é feito através dos fluent maps. A ideia dos mapeamentos é fazer a mesma coisa que as anotações, porém feito de uma forma diferente, pois usamos um esquema chamado de FluentAPI, que básicamente é uma codificação mais explicita. E bora começar! A magia acontece dentro da pasta Data/Mapping 

= Mapeamento
- Dê/Para
- Diz qual classe no C# se refere a qual tabela do banco de dados
- Diz quais propriedades de classe se refere a quais colunas da tabelas no banco de dados
- Informa o tipo de dados
- Permite gerar o banco automaticamente

= Tipos de Mapeamento
- FluentMapping
  - Mapeamento Fluente
  - Feito em uma classe externa
  - Não "polui" a classe principal
  - Não cria dependências na classe/projeto principal

- Primary Key and Identity
- Mapeando propriedades
- Indices
- Default Values
- Relacionamento um para muitos
- Relacionamento muitos para muitos
