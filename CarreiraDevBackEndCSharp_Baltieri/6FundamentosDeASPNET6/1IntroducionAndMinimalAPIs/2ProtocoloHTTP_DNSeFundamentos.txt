- Agora vamos aprender os fudamentos que envolvem toda essa construção de aplicação web
- Primeiro vamos entender o que significa cada ponto do nosso endereço localhost: https://localhost:7177/
- O :7177 é a nosssa porta da nossa aplicação
- O /localhost é o dominio da nossa aplicação
- E o https:/ é o nosso protocolo, sendo que o s é de secury. Então http é um protocolo Hyper Text Transfer Protocol, um protocolo de transferência de hypertexto, que permite que a gente trafegue imagens, arquivos de mídia, além do texto. E é de boa prática sempre usar ao invés de só o http, o https, do qual o dotnet sempre traz por padrão quando criamos uma aplicação web. Isso justamente pelo fato de trazer mais segurança para as nossas aplicações. Então a gente já tem uma segurança sobre as nossas aplicações, sobre as nossas APIs. E em rarissimos casos você deve tentar rodar sua API via http, na maioria das vezes rode sempre via https.
- O DNS significa Domain Name Service, que faz um depara pra gente. O nosso dominio se chama localhost, mas todo dominio por trás sempre tem um ping relacionado a ele, no nosso caso é o 127.0.0.1, que é o dominio local. Não seria legal a gente passar um ip para os nossos usuários para que eles tivesse acesso aos nossos sites, aplicações, etc. E é ai que entra o DNS, que faz o depara, onde ele aponta para o ip que deseja ser acessado. No caso, ele sabe que o localhost aponta para o ip 127.0.0.1. Se você abrir seu terminal e digitar ping www.google.com, ele vai mostar o ip que está sendo usado naquele momento pela google, do qual é o endereço que usuário vai ser direcionado quando acessar o site. Porém, como em todos os casos a gente usa o DNS para mascarar esse endereço de ip, a gente não vai precisar botar esses numeros todos, mas sim apenas o endereço normal do site como a gente faz no dia a dia. E como a maioria dos sites de respeito ta sempre com o seu ip alternando, ou mesmo tem diferentes ips por ser hospedado em diversos servidores, o DNS já é inteligente para sempre apontar a gente pro site correto, mesmo que o ip seja diferente naquele momento. 
- E a porta serve justamente para apontar para um endereço correto. Pois no caso do localhost, a gente pode trabalhar com diversas aplicações rodando ao mesmo tempo, onde cada aplicação tem a sua porta especifica com a sua numereção.
- No dotnet 5 essa porta era fixa, onde para requisições https a gente tinha a 5001, e para as requisições http a gente tinha a porta 5000. No dotnet 6 em diante, essa porta é gerada de forma randomica. Então a sua porta vai provavelmente ser diferente da que eu estou usando aqui como exemplo
- No nosso servidor, quando a gente hospedar essa aplicação, ele vai gerar uma porta para a aplicação rodar, mas isso é interno do servidor que a gente hospedo, onde no fim a gente não vai nem mexer, então a gente só vê essa parte da porta, localhost, etc, localmente, depois de publicado não temos mais acesso
- E é nesse endereço que a nossa aplicação roda, é justamente nesse endereço que ela está recebendo requisições. Então, quando a gente da um enter no endereço, basicamente a gente ta mandando uma requisição pra lá, e na tela é onde ela responde a requisição. Então ela pegou a requisição, processou as informações no back e devolveu pra tela.
- Agora vá pro arquivo de texto 3 pq aqui já se acabousse
- E claro que iremos fazer tudo isso durante o curso usando o Azure